{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x55e43fc91962fc91b601488430858946986b1c1cc2efea1d71c6166007e1b46f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1039397",
    "logsBloom": "0x
    "blockHash": "0x3ace634ec97189070e97b236d268f69522a91fd6d931d04fe0aeb288e9af1939",
    "transactionHash": "0x55e43fc91962fc91b601488430858946986b1c1cc2efea1d71c6166007e1b46f",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1039397",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "92f7e88316d8f29f865256f4fd730a41",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    event Funded(address indexed from, uint256 amount);\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    \\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n        emit Funded(msg.sender, msg.value);\\n    }\\n    \\n    // function getVersion() public view returns (uint256){\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\n    //     return priceFeed.version();\\n    // }\\n    \\n    function withdraw() payable onlyOwner public {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for ( \\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n}\\n\",\"keccak256\":\"0xd9ad395e92316aef726d44a65d82de01376456b5578dfc4ec07a27c6f4786110\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x222f8b912c930f71a2d5b21cc91409442039a2fd5e7d3c53a901751ada1cd559\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012f5380380620012f5833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61116f62000186600039600081816101b3015281816105ed01528181610807015261089f015261116f6000f3fe60806040526004361061007b5760003560e01c8063741bef1a1161004e578063741bef1a1461012f578063b60d42881461015a578063be2693f014610164578063dba6335f1461016e5761007b565b80631bf6132d146100805780633ccfd60b146100bd57806354861af7146100c75780636b69a59214610104575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610aa7565b610199565b6040516100b49190610aed565b60405180910390f35b6100c56101b1565b005b3480156100d357600080fd5b506100ee60048036038101906100e99190610b34565b6103f1565b6040516100fb9190610b70565b60405180910390f35b34801561011057600080fd5b50610119610430565b6040516101269190610aed565b60405180910390f35b34801561013b57600080fd5b5061014461043d565b6040516101519190610bea565b60405180910390f35b610162610463565b005b61016c6105eb565b005b34801561017a57600080fd5b5061018361089d565b6040516101909190610b70565b60405180910390f35b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610236576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102e15760006001828154811061025c5761025b610c05565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102d990610c63565b915050610239565b50600067ffffffffffffffff8111156102fd576102fc610cac565b5b60405190808252806020026020018201604052801561032b5781602001602082028036833780820191505090505b506001908051906020019061034192919061099d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161036890610d0c565b60006040518083038185875af1925050503d80600081146103a5576040519150601f19603f3d011682016040523d82523d6000602084013e6103aa565b606091505b50509050806103ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e590610d7e565b60405180910390fd5b50565b6001818154811061040157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b18800006104a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c190919063ffffffff16565b10156104e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104da90610dea565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105319190610e0a565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a524346040516105e19190610aed565b60405180910390a2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610670576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106f457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106aa575b5050505050905060005b81518110156107a25760006001828154811061071d5761071c610c05565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061079a90610c63565b9150506106fe565b50600067ffffffffffffffff8111156107be576107bd610cac565b5b6040519080825280602002602001820160405280156107ec5781602001602082028036833780820191505090505b506001908051906020019061080292919061099d565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161084990610d0c565b60006040518083038185875af1925050503d8060008114610886576040519150601f19603f3d011682016040523d82523d6000602084013e61088b565b606091505b505090508061089957600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108cd836108fd565b90506000670de0b6b3a764000085836108e69190610e60565b6108f09190610ee9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094657600080fd5b505afa15801561095a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097e9190610fa7565b5050509150506402540be400816109959190611022565b915050919050565b828054828255906000526020600020908101928215610a16579160200282015b82811115610a155782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109bd565b5b509050610a239190610a27565b5090565b5b80821115610a40576000816000905550600101610a28565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7482610a49565b9050919050565b610a8481610a69565b8114610a8f57600080fd5b50565b600081359050610aa181610a7b565b92915050565b600060208284031215610abd57610abc610a44565b5b6000610acb84828501610a92565b91505092915050565b6000819050919050565b610ae781610ad4565b82525050565b6000602082019050610b026000830184610ade565b92915050565b610b1181610ad4565b8114610b1c57600080fd5b50565b600081359050610b2e81610b08565b92915050565b600060208284031215610b4a57610b49610a44565b5b6000610b5884828501610b1f565b91505092915050565b610b6a81610a69565b82525050565b6000602082019050610b856000830184610b61565b92915050565b6000819050919050565b6000610bb0610bab610ba684610a49565b610b8b565b610a49565b9050919050565b6000610bc282610b95565b9050919050565b6000610bd482610bb7565b9050919050565b610be481610bc9565b82525050565b6000602082019050610bff6000830184610bdb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6e82610ad4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ca157610ca0610c34565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cf6600083610cdb565b9150610d0182610ce6565b600082019050919050565b6000610d1782610ce9565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d68600b83610d21565b9150610d7382610d32565b602082019050919050565b60006020820190508181036000830152610d9781610d5b565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610dd4601b83610d21565b9150610ddf82610d9e565b602082019050919050565b60006020820190508181036000830152610e0381610dc7565b9050919050565b6000610e1582610ad4565b9150610e2083610ad4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e5557610e54610c34565b5b828201905092915050565b6000610e6b82610ad4565b9150610e7683610ad4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eaf57610eae610c34565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ef482610ad4565b9150610eff83610ad4565b925082610f0f57610f0e610eba565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f3981610f1a565b8114610f4457600080fd5b50565b600081519050610f5681610f30565b92915050565b6000819050919050565b610f6f81610f5c565b8114610f7a57600080fd5b50565b600081519050610f8c81610f66565b92915050565b600081519050610fa181610b08565b92915050565b600080600080600060a08688031215610fc357610fc2610a44565b5b6000610fd188828901610f47565b9550506020610fe288828901610f7d565b9450506040610ff388828901610f92565b935050606061100488828901610f92565b925050608061101588828901610f47565b9150509295509295909350565b600061102d82610f5c565b915061103883610f5c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561107757611076610c34565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110b4576110b3610c34565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110f1576110f0610c34565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561112e5761112d610c34565b5b82820290509291505056fea264697066735822122087b016c822250182b139b9420a3ced38e7a355e3b8d7f24d1ef5c7b6d6088ea464736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063741bef1a1161004e578063741bef1a1461012f578063b60d42881461015a578063be2693f014610164578063dba6335f1461016e5761007b565b80631bf6132d146100805780633ccfd60b146100bd57806354861af7146100c75780636b69a59214610104575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610aa7565b610199565b6040516100b49190610aed565b60405180910390f35b6100c56101b1565b005b3480156100d357600080fd5b506100ee60048036038101906100e99190610b34565b6103f1565b6040516100fb9190610b70565b60405180910390f35b34801561011057600080fd5b50610119610430565b6040516101269190610aed565b60405180910390f35b34801561013b57600080fd5b5061014461043d565b6040516101519190610bea565b60405180910390f35b610162610463565b005b61016c6105eb565b005b34801561017a57600080fd5b5061018361089d565b6040516101909190610b70565b60405180910390f35b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610236576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156102e15760006001828154811061025c5761025b610c05565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102d990610c63565b915050610239565b50600067ffffffffffffffff8111156102fd576102fc610cac565b5b60405190808252806020026020018201604052801561032b5781602001602082028036833780820191505090505b506001908051906020019061034192919061099d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161036890610d0c565b60006040518083038185875af1925050503d80600081146103a5576040519150601f19603f3d011682016040523d82523d6000602084013e6103aa565b606091505b50509050806103ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e590610d7e565b60405180910390fd5b50565b6001818154811061040157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b18800006104a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c190919063ffffffff16565b10156104e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104da90610dea565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105319190610e0a565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a524346040516105e19190610aed565b60405180910390a2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610670576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106f457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106aa575b5050505050905060005b81518110156107a25760006001828154811061071d5761071c610c05565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061079a90610c63565b9150506106fe565b50600067ffffffffffffffff8111156107be576107bd610cac565b5b6040519080825280602002602001820160405280156107ec5781602001602082028036833780820191505090505b506001908051906020019061080292919061099d565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161084990610d0c565b60006040518083038185875af1925050503d8060008114610886576040519150601f19603f3d011682016040523d82523d6000602084013e61088b565b606091505b505090508061089957600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108cd836108fd565b90506000670de0b6b3a764000085836108e69190610e60565b6108f09190610ee9565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094657600080fd5b505afa15801561095a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097e9190610fa7565b5050509150506402540be400816109959190611022565b915050919050565b828054828255906000526020600020908101928215610a16579160200282015b82811115610a155782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109bd565b5b509050610a239190610a27565b5090565b5b80821115610a40576000816000905550600101610a28565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a7482610a49565b9050919050565b610a8481610a69565b8114610a8f57600080fd5b50565b600081359050610aa181610a7b565b92915050565b600060208284031215610abd57610abc610a44565b5b6000610acb84828501610a92565b91505092915050565b6000819050919050565b610ae781610ad4565b82525050565b6000602082019050610b026000830184610ade565b92915050565b610b1181610ad4565b8114610b1c57600080fd5b50565b600081359050610b2e81610b08565b92915050565b600060208284031215610b4a57610b49610a44565b5b6000610b5884828501610b1f565b91505092915050565b610b6a81610a69565b82525050565b6000602082019050610b856000830184610b61565b92915050565b6000819050919050565b6000610bb0610bab610ba684610a49565b610b8b565b610a49565b9050919050565b6000610bc282610b95565b9050919050565b6000610bd482610bb7565b9050919050565b610be481610bc9565b82525050565b6000602082019050610bff6000830184610bdb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6e82610ad4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ca157610ca0610c34565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610cf6600083610cdb565b9150610d0182610ce6565b600082019050919050565b6000610d1782610ce9565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d68600b83610d21565b9150610d7382610d32565b602082019050919050565b60006020820190508181036000830152610d9781610d5b565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610dd4601b83610d21565b9150610ddf82610d9e565b602082019050919050565b60006020820190508181036000830152610e0381610dc7565b9050919050565b6000610e1582610ad4565b9150610e2083610ad4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e5557610e54610c34565b5b828201905092915050565b6000610e6b82610ad4565b9150610e7683610ad4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eaf57610eae610c34565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ef482610ad4565b9150610eff83610ad4565b925082610f0f57610f0e610eba565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f3981610f1a565b8114610f4457600080fd5b50565b600081519050610f5681610f30565b92915050565b6000819050919050565b610f6f81610f5c565b8114610f7a57600080fd5b50565b600081519050610f8c81610f66565b92915050565b600081519050610fa181610b08565b92915050565b600080600080600060a08688031215610fc357610fc2610a44565b5b6000610fd188828901610f47565b9550506020610fe288828901610f7d565b9450506040610ff388828901610f92565b935050606061100488828901610f92565b925050608061101588828901610f47565b9150509295509295909350565b600061102d82610f5c565b915061103883610f5c565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561107757611076610c34565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110b4576110b3610c34565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110f1576110f0610c34565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561112e5761112d610c34565b5b82820290509291505056fea264697066735822122087b016c822250182b139b9420a3ced38e7a355e3b8d7f24d1ef5c7b6d6088ea464736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 79,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}